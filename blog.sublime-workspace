{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"file",
				"filename"
			],
			[
				"physics",
				"physics_type"
			],
			[
				"type_en",
				"type_entity_t"
			],
			[
				"call",
				"callbacks"
			],
			[
				"RENDER",
				"render_directx"
			],
			[
				"DEPEN",
				"ENGINE_DEPENDENCIES"
			],
			[
				"SHADER",
				"SHADER_THIRDPARTIES"
			],
			[
				"load_",
				"load_rollout"
			],
			[
				"toolbar",
				"toolbar_t"
			],
			[
				"toolb",
				"toolbar_t"
			],
			[
				"tabbed",
				"tabbed_rollouts"
			],
			[
				"TEXT_co",
				"text_color_hot"
			],
			[
				"text_",
				"text_color_hot"
			],
			[
				"text_color",
				"text_color_hot"
			],
			[
				"text_col",
				"text_color_hot"
			],
			[
				"button_c",
				"button_color"
			],
			[
				"text_c",
				"text_color"
			],
			[
				"start",
				"start_control"
			],
			[
				"seri",
				"serialization"
			],
			[
				"container",
				"containter_type"
			],
			[
				"obj",
				"obj_start"
			],
			[
				"serial",
				"serialize_prop"
			],
			[
				"base_props",
				"base_props_current"
			],
			[
				"Ser",
				"serialize"
			],
			[
				"seria",
				"serialize"
			],
			[
				"len",
				"length"
			],
			[
				"strings",
				"stringstream"
			],
			[
				"type",
				"typename"
			]
		]
	},
	"buffers":
	[
		{
			"file": "_posts/2020-01-28-glw-history.md",
			"settings":
			{
				"buffer_size": 2031,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "_posts/2017-08-31-imgui.md",
			"settings":
			{
				"buffer_size": 790,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 165 files for \"https://www.youtube.com/\"\n\nE:\\projects\\sites\\blog2\\_includes\\youtubePlayer.html:\n    1  <div class=\"embed-container\"  style=\"border: 5px solid lightgrey\">\n    2    <iframe\n    3:       src=\"https://www.youtube.com/embed/{{ include.id }}\"\n    4        width=\"700\"\n    5        height=\"480\"\n\nE:\\projects\\sites\\blog2\\_posts\\2017-04-21-pied-piper.md:\n   12  “Pied Piper” – stupid little game about dancing zombies. It’s my first attempt to participate and finish a game for Ludum Dare.\n   13  \n   14: **What went right** – The idea to use Fuse tool for characters and mixamo.com for animations really saved time. It’s easy to make a realistic character in Fuse and I prepared a pipeline for exporting characters from mixamo.com to my engine before Jam. Also, making the game was a lot of fun (really loud laughing for the first 10 minutes when I saw [the first dance](https://www.youtube.com/watch?v=CERzkDsdcv8)) and it was an important motivation to finish it.\n   15  \n   16  **What went not so right**  –  planning (as usual) – I spent one evening on selecting proper music from freesound.org and had only one evening and night to actually write the code. As usual, I found several weird glitches (downside of the usage of my own engine). One glitch leaked to the first release for LD (and fixed in the latest version)\n   ..\n   20  <a href=\"/blog/images/uploads/2017/pied_piper.gif\"><img src=\"/blog/images/uploads/2017/pied_piper.gif\" width=\"284\" alt=\"\" /></a>\n   21  \n   22: **[Youtube video of the latest version is here](https://www.youtube.com/watch?v=gfFYABZgync)**\n   23  \n   24  \n\nE:\\projects\\sites\\blog2\\_posts\\2017-08-31-imgui.md:\n   12  [https://github.com/yak32/glw_imgui](https://github.com/yak32/glw_imgui)\n   13  \n   14: IMGUI is a code-driven, simple and bloat-free GUI system, widely used in modern game engines and games. Best explanation of IMGUI concept is [here](https://www.youtube.com/watch?v=Z1qyvQsjK5Y). The library has basic suppot for layouting (attachable toolbars, layout serialization), themes (colors and serialization), lock-free multithreading (triple buffering).\n   15  \n   16  This library was a part of my game engine, but I extracted and moved it to github some time ago.\n\n4 matches across 3 files\n\n\nSearching 165 files for \"www.youtube.com/\"\n\nE:\\projects\\sites\\blog2\\_includes\\youtubePlayer.html:\n    1  <div class=\"embed-container\"  style=\"border: 5px solid lightgrey\">\n    2    <iframe\n    3:       src=\"https://www.youtube.com/embed/{{ include.id }}\"\n    4        width=\"700\"\n    5        height=\"480\"\n\nE:\\projects\\sites\\blog2\\_posts\\2009-11-02-new-video-for-igf.md:\n    9  ---\n   10  \n   11: <object width=\"425\" height=\"344\"><param name=\"movie\" value=\"//www.youtube.com/v/IR-AKwOS4a4&hl=en&fs=1&\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"//www.youtube.com/v/IR-AKwOS4a4&hl=en&fs=1&\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"425\" height=\"344\"></embed></object><br /><br />I hope to finish gameplay in near 2 weeks\n   12  \n\nE:\\projects\\sites\\blog2\\_posts\\2009-11-09-little-zombie-susie-gameplay.md:\n    9  ---\n   10  \n   11: First several minutes of gameplay <br /><object width=\"425\" height=\"344\"><param name=\"movie\" value=\"//www.youtube.com/v/RQPOnuLiXIw&amp;hl=en&amp;fs=1&amp;\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"//www.youtube.com/v/RQPOnuLiXIw&amp;hl=en&amp;fs=1&amp;\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"425\" height=\"344\"></embed></object>\n   12  \n\nE:\\projects\\sites\\blog2\\_posts\\2017-04-21-pied-piper.md:\n   12  “Pied Piper” – stupid little game about dancing zombies. It’s my first attempt to participate and finish a game for Ludum Dare.\n   13  \n   14: **What went right** – The idea to use Fuse tool for characters and mixamo.com for animations really saved time. It’s easy to make a realistic character in Fuse and I prepared a pipeline for exporting characters from mixamo.com to my engine before Jam. Also, making the game was a lot of fun (really loud laughing for the first 10 minutes when I saw [the first dance](https://www.youtube.com/watch?v=CERzkDsdcv8)) and it was an important motivation to finish it.\n   15  \n   16  **What went not so right**  –  planning (as usual) – I spent one evening on selecting proper music from freesound.org and had only one evening and night to actually write the code. As usual, I found several weird glitches (downside of the usage of my own engine). One glitch leaked to the first release for LD (and fixed in the latest version)\n   ..\n   20  <a href=\"/blog/images/uploads/2017/pied_piper.gif\"><img src=\"/blog/images/uploads/2017/pied_piper.gif\" width=\"284\" alt=\"\" /></a>\n   21  \n   22: **[Youtube video of the latest version is here](https://www.youtube.com/watch?v=gfFYABZgync)**\n   23  \n   24  \n\nE:\\projects\\sites\\blog2\\_posts\\2017-08-31-imgui.md:\n   12  [https://github.com/yak32/glw_imgui](https://github.com/yak32/glw_imgui)\n   13  \n   14: IMGUI is a code-driven, simple and bloat-free GUI system, widely used in modern game engines and games. Best explanation of IMGUI concept is [here](https://www.youtube.com/watch?v=Z1qyvQsjK5Y). The library has basic suppot for layouting (attachable toolbars, layout serialization), themes (colors and serialization), lock-free multithreading (triple buffering).\n   15  \n   16  This library was a part of my game engine, but I extracted and moved it to github some time ago.\n\n8 matches across 5 files\n\n\nSearching 165 files for \" cinematic trailer wit\"\n\nE:\\projects\\sites\\blog2\\_posts\\2014-01-07-iron-cube-0-31.md:\n   28  * friendly bots are currently disabled, but will be restored soon.\n   29  \n   30: New cinematic trailer with ~~dubstep~~ music!\n   31  \n   32  {% include youtubePlayer.html id=\"ipgDNRQKvLw\" %}\n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 5958,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "_posts/2014-01-07-iron-cube-0-31.md",
			"settings":
			{
				"buffer_size": 1971,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 335.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"preview m",
				"Markdown Preview: Preview in Browser"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"markdown chee",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"format",
				"Clang Format: Format Selection"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"log",
				"Git: Quick Log Current File"
			],
			[
				"clan",
				"Clang Format: Format Selection"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"diff",
				"Git: Diff"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"CLAN",
				"Clang Format: Format Selection"
			],
			[
				"cmake",
				"Set Syntax: CMake"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"",
				"Clang Format: Format Selection"
			],
			[
				"clangf",
				"Clang Format: Format Selection"
			],
			[
				"di",
				"Git: Diff"
			],
			[
				"git diff",
				"Git: Diff"
			],
			[
				"forma",
				"Clang Format: Format Selection"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"form",
				"Clang Format: Format Selection"
			],
			[
				"brows",
				"Preferences: Browse Packages"
			],
			[
				"browse",
				"Preferences: Browse Packages"
			],
			[
				"sta",
				"Stackoverflow: Search from Input"
			],
			[
				"stac",
				"Stackoverflow: Search from Input"
			],
			[
				"git di",
				"Git: Diff"
			],
			[
				"checkou",
				"Git: Checkout"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"projects",
				"Project: Close"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"font",
				"Preferences: Package Control Settings – User"
			],
			[
				"ctags",
				"CTags: Show Symbols (all)"
			],
			[
				"clanf",
				"Clang Format: Select Style"
			]
		],
		"width": 386.0
	},
	"console":
	{
		"height": 167.0,
		"history":
		[
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(true)",
			"c:\\Apps\\ctags.exe",
			"/c/Apps/ctags.exe",
			"\\c\\Apps\\ctags.exe",
			"c:\\Apps\\ctags.exe",
			"ctags.exe",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"sublime.log_commands(True)",
			"cd c:\\\\projects\\\\glow\\\\build\\\\cmake",
			"cd c:\\projects\\glow\\build\\cmake",
			"cd c:/projects/glow/build/cmake"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/projects/sites/blog2",
		"/E/projects/sites/blog2/_includes",
		"/E/projects/sites/blog2/_layouts",
		"/E/projects/sites/blog2/_posts",
		"/E/projects/sites/blog2/css"
	],
	"file_history":
	[
		"/E/projects/sites/blog2/blog.sublime-project",
		"/E/projects/sites/blog2/index.html",
		"/E/projects/sites/blog2/_layouts/post.html",
		"/E/projects/sites/blog2/feed.xml",
		"/E/projects/sites/blog2/_layouts/default.html",
		"/E/projects/sites/blog2/_posts/2019-11-18-raytracing-day-1.md",
		"/E/projects/sites/blog2/_includes/links-list.html",
		"/E/projects/sites/blog2/_includes/image.md",
		"/E/projects/sites/blog2/css/theme.css",
		"/E/projects/sites/blog2/0001-changes.patch",
		"/E/projects/sites/blog2/_includes/youtubePlayer.html",
		"/E/projects/sites/blog2/_posts/2011-12-01-atmospheric-scattering.md",
		"/E/projects/sites/blog2/links.html",
		"/E/projects/sites/blog2/_posts/2011-12-02-new-day-new-picture-with-house.md",
		"/E/projects/sites/blog2/_posts/2011-04-04-color-transformations.md",
		"/E/projects/sites/blog2/_posts/2011-06-16-hdr.md",
		"/E/projects/sites/blog2/_posts/2011-01-23-hdr.md",
		"/E/projects/sites/blog2/_posts/2009-11-01-first-screen-from-my-new-game-little-zombie-susie.md",
		"/E/projects/sites/blog2/_posts/2009-11-30-loading-of-materials.md",
		"/E/projects/sites/blog2/_posts/2009-12-01-memory-management.md",
		"/E/projects/sites/blog2/_posts/2011-12-06-finally-water.md",
		"/E/projects/sites/blog2/_posts/2011-12-08-ssao-first-steps.md",
		"/E/projects/sites/blog2/_posts/2012-06-02-explosions.md",
		"/E/projects/sites/blog2/_posts/2019-10-16-fullscreen-in-emscripten.md",
		"/E/projects/sites/blog2/_posts/2017-04-21-pied-piper.md",
		"/E/projects/sites/blog2/_posts/2017-05-02-new-blog.md",
		"/E/projects/sites/blog2/_posts/2011-03-21-npc-with-several-lights.md",
		"/E/projects/sites/blog2/_posts/2011-12-22-a-lot-of-new-features-implemented.md",
		"/E/projects/sites/blog2/_posts/2011-12-26-deferred-reflections.md",
		"/E/projects/sites/blog2/_posts/2012-05-10-first-opengl-screen.md",
		"/E/projects/sites/blog2/_posts/2012-05-25-first-screen-of-voxel-field-update-throw-network.md",
		"/E/projects/sites/blog2/_posts/2012-06-26-the-art8.md",
		"/E/projects/sites/blog2/_posts/2012-06-28-first-iteration-of-grass.md",
		"/E/projects/sites/blog2/_posts/2012-08-14-site-moved-to-amazon-ec2.md",
		"/E/projects/sites/blog2/_posts/2012-08-20-geometry-optimization.md",
		"/E/projects/sites/blog2/_posts/2012-10-19-model-of-a-tank-for-a-new-game.md",
		"/E/projects/sites/blog2/_posts/2012-10-23-voxelization.md",
		"/E/projects/sites/blog2/_posts/2013-07-03-iron-cube-pre-alpha-release-0-15.md",
		"/E/projects/sites/blog2/_posts/2013-10-23-iron-cube-tank-multiplayer-combat-in-voxel-world-is-ported-to-android-and-available-on-google-play-store-for-free.md",
		"/E/projects/sites/blog2/_posts/2014-01-07-iron-cube-0-31.md",
		"/E/projects/sites/blog2/_posts/2009-08-11-4.md",
		"/E/projects/sites/blog2/_posts/2009-08-12-5.md",
		"/E/projects/sites/blog2/_posts/2009-08-18-dynamic-paths-in-glow-engine.md",
		"/E/projects/sites/blog2/_posts/2009-10-16-explosions-and-weapon-for-zombie.md",
		"/E/projects/sites/blog2/_posts/2009-10-20-recast-navigation-plus-havok-physics-engine.md",
		"/E/projects/sites/blog2/_posts/2009-11-02-new-video-for-igf.md",
		"/E/projects/sites/blog2/_posts/2009-11-09-little-zombie-susie-gameplay.md",
		"/E/projects/sites/blog2/_posts/2009-12-07-recast-dynamic-navigation-meshes.md",
		"/E/projects/sites/blog2/_posts/2009-12-09-lighting-abilities-of-my-engine.md",
		"/E/projects/sites/blog2/_posts/2009-12-15-simple-steering-behavior.md",
		"/E/projects/sites/blog2/_posts/2009-12-17-recast-navigation-steering-behavior-wall-repulse-force.md",
		"/E/projects/sites/blog2/_posts/2009-12-24-first-horde-tests.md",
		"/E/projects/sites/blog2/_posts/2010-02-01-water.md",
		"/E/projects/sites/blog2/_posts/2010-08-25-editor-features.md",
		"/E/projects/sites/blog2/_posts/2011-12-27-cinematic-editor-with-camera-animation.md",
		"/E/projects/sites/blog2/_posts/2011-12-28-new-day-new-feature.md",
		"/E/projects/sites/blog2/_posts/2012-03-20-tarta-game.md",
		"/E/projects/sites/blog2/_posts/2012-05-11-one-more-video-with-day-night-loop.md",
		"/E/projects/sites/blog2/_posts/2012-05-11-opengl.md",
		"/E/projects/sites/blog2/_posts/2012-05-23-fishes.md",
		"/E/projects/sites/blog2/_posts/2012-10-22-voxel-landscape-flight.md",
		"/E/projects/sites/blog2/_posts/2012-12-06-performance-test-of-glow-engine.md",
		"/E/projects/sites/blog2/_posts/2012-12-23-leap-motion.md",
		"/E/projects/sites/blog2/_posts/2012-10-04-google-nacl-build-of-glow-engine.md",
		"/E/projects/sites/blog2/_posts/2012-11-09-greedy-mesh-generation-for-voxel-field.md",
		"/E/projects/sites/blog2/_posts/2012-11-23-i-goes-deep-with-my-tank-game.md",
		"/E/projects/sites/blog2/_posts/2012-11-26-still-life-with-a-tank-and-a-tree.md",
		"/E/projects/sites/blog2/_posts/2012-12-06-iron-cube.md",
		"/E/projects/sites/blog2/_posts/2012-12-11-looks-like-the-trees-from-iron-cube-game-is-real.md",
		"/E/projects/sites/blog2/_posts/2013-01-02-steam-bigpicture.md",
		"/E/projects/sites/blog2/_posts/2013-01-16-glow-engine-on-android.md",
		"/E/projects/sites/blog2/_posts/2013-01-22-leap-motion-2.md",
		"/E/projects/sites/blog2/_posts/2013-01-23-iron-cube-on-android.md",
		"/E/projects/sites/blog2/_posts/2013-02-10-rasterization-to-voxels.md",
		"/E/projects/sites/blog2/_posts/2013-02-22-project-mercury.md",
		"/E/projects/sites/blog2/_posts/2013-03-05-better-video-of-mercury-prototype.md",
		"/E/projects/sites/blog2/_posts/2013-02-28-why-android-is-better.md",
		"/E/projects/sites/blog2/_posts/2013-03-28-first-prize-winner-of-intel-perceptual-computing-challenge.md",
		"/E/projects/sites/blog2/_posts/2013-03-29-new-voxel-based-lighting.md",
		"/E/projects/sites/blog2/_posts/2013-11-12-intel-perceptual-computing-challenge-stage-2.md",
		"/E/projects/sites/blog2/_posts/2013-12-02-iron-cube-cinematic-effects.md",
		"/E/projects/sites/blog2/_posts/2013-12-16-screenshot-of-iron-cube-editor.md",
		"/E/projects/sites/blog2/_posts/2013-12-23-one-more-screenshot.md",
		"/E/projects/sites/blog2/_posts/2014-09-24-new-ambient-lighting-implementation.md",
		"/E/projects/sites/blog2/_posts/2014-12-20-directx-11.md",
		"/E/projects/sites/blog2/_posts/2017-04-20-voxel-project.md",
		"/E/projects/sites/blog2/_posts/2017-05-07-fantasy-game.md",
		"/E/projects/sites/blog2/_site/2011/04/color-transformations.html",
		"/E/projects/sites/blog2/_site/css/bootstrap.min.css",
		"/E/projects/sites/blog2/_posts/2019-10-10-emscripten.md",
		"/E/projects/sites/blog2/_config.yml",
		"/E/projects/sites/blog2/_posts/2017-08-31-imgui.md",
		"/E/projects/sites/blog2/_site/feed.xml",
		"/E/projects/sites/blog2/2012-05-22-Vivamus-porttitor-porta-tortor.md",
		"/E/projects/sites/blog2/_posts/2014-08-22-jekyll-clean-theme.md",
		"/E/projects/sites/blog2/_posts/2012-12-24-to-create-button-in-cegui.md",
		"/E/projects/sites/blog2/_posts/2010-08-05-quaternion.md",
		"/E/projects/sites/blog2/_posts/2012-08-29-C++.md",
		"/E/projects/sites/blog2/_posts/2009-12-14-simple-optimization.md",
		"/E/projects/sites/blog2/_posts/2010-08-03-editor-ui.md",
		"/E/projects/sites/blog2/images/uploads/2019/iron_cube_fullscreen.jpg",
		"/E/projects/sites/blog2/about.html",
		"/E/projects/sites/blog/_layouts/default.html",
		"/E/projects/sites/blog/index.html",
		"/E/projects/sites/blog/_posts/2017-05-02-new-blog.md",
		"/E/projects/sites/blog/_posts/2017-05-07-fantasy-game.md",
		"/E/projects/sites/blog/_posts/2012-10-04-google-nacl-build-of-glow-engine.md",
		"/E/projects/sites/blog/_posts/2017-04-21-pied-piper.md",
		"/E/projects/sites/blog/_layouts/post.html",
		"/E/projects/sites/blog/_includes/fb.html",
		"/E/projects/sites/blog/_site/index.html",
		"/E/projects/sites/blog/_site/page5/index.html",
		"/E/projects/sites/blog/_site/engine/2014/12/20/directx-11.html",
		"/E/projects/sites/blog/_includes/head.html",
		"/E/projects/sites/blog/_includes/meta.html",
		"/E/projects/sites/blog/_config.yml",
		"/E/projects/sites/blog/_posts/2017-04-20-voxel-project.md",
		"/E/projects/sites/blog/_posts/2014-12-20-directx-11.md",
		"/E/projects/sites/blog/_posts/2014-09-24-new-ambient-lighting-implementation.md",
		"/E/projects/sites/blog/_posts/2014-01-07-iron-cube-0-31.md",
		"/E/projects/sites/blog/_posts/2013-12-23-one-more-screenshot.md",
		"/E/projects/sites/blog/_posts/2013-12-16-screenshot-of-iron-cube-editor.md",
		"/E/projects/sites/blog/_posts/2013-12-02-iron-cube-cinematic-effects.md",
		"/E/projects/sites/blog/_posts/2013-11-12-intel-perceptual-computing-challenge-stage-2.md",
		"/E/projects/sites/blog/_posts/2013-03-28-first-prize-winner-of-intel-perceptual-computing-challenge.md",
		"/E/projects/sites/blog/_posts/2013-07-03-iron-cube-pre-alpha-release-0-15.md",
		"/E/projects/sites/blog/_posts/2013-03-29-new-voxel-based-lighting.md",
		"/E/projects/sites/blog/_posts/2013-03-05-better-video-of-mercury-prototype.md"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 117.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			" cinematic trailer wit",
			"www.youtube.com/",
			"https://www.youtube.com/",
			"glow3d]",
			"post.",
			"subtitle",
			"content",
			"post",
			".content",
			"post.content",
			"metal su",
			"\"img-responsive\"",
			"a href=",
			"Atmospheric Scattering",
			"onblur",
			"New day - new picture with the house )",
			"Blue and Green shifted, to create Matrix movie look",
			"Current state of editor.. several tasks to finish alpha version..",
			"HDR",
			"bp.blog",
			"finally water",
			"SSAO First steps",
			"Explosions!",
			"Jun 2, 2012 - Explosions!",
			" Iron Cube!",
			" Iron Cube 0.31",
			"img-responsive",
			"respon",
			".img",
			"Ludum dare",
			"New website and blog",
			"src=\"/blog/",
			"![](/blog/ima"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"page."
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "_posts/2020-01-28-glw-history.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2031,
						"regions":
						{
						},
						"selection":
						[
							[
								835,
								835
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 744.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "_posts/2017-08-31-imgui.md",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 790,
						"regions":
						{
						},
						"selection":
						[
							[
								472,
								496
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5958,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										215,
										239
									],
									[
										889,
										913
									],
									[
										1548,
										1572
									],
									[
										1907,
										1931
									],
									[
										2476,
										2492
									],
									[
										2720,
										2736
									],
									[
										2891,
										2907
									],
									[
										3329,
										3345
									],
									[
										3488,
										3504
									],
									[
										4264,
										4280
									],
									[
										4923,
										4939
									],
									[
										5282,
										5298
									],
									[
										5831,
										5853
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								5850,
								5850
							]
						],
						"settings":
						{
							"default_dir": "E:\\projects\\sites\\blog2\\_posts",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2340.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "_posts/2014-01-07-iron-cube-0-31.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1971,
						"regions":
						{
						},
						"selection":
						[
							[
								1127,
								1078
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 150.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 294.0
	},
	"output.find_results":
	{
		"height": 157.0
	},
	"pinned_build_system": "glow3d.com/blog",
	"project": "blog.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"index.h",
				"index.html"
			],
			[
				"post.h",
				"_layouts\\post.html"
			],
			[
				"index.",
				"index.html"
			],
			[
				"link-li",
				"_includes\\links-list.html"
			],
			[
				"links",
				"links.html"
			],
			[
				"2012-10-04",
				"_posts\\2012-10-04-google-nacl-build-of-glow-engine.md"
			],
			[
				"about",
				"about.html"
			],
			[
				"index",
				"index.html"
			],
			[
				"default",
				"_layouts\\default.html"
			],
			[
				"isou",
				"source\\sound\\api\\isound.h"
			],
			[
				"inetw",
				"source\\network\\api\\inetwork.h"
			],
			[
				"iai",
				"source\\ai\\api\\iai.h"
			],
			[
				"types.h",
				"source\\kernel\\api\\types.h"
			],
			[
				"engine_json",
				"source\\core\\src\\serialization\\engine_json.cpp"
			],
			[
				"engine_j",
				"source\\core\\src\\serialization\\engine_json.h"
			],
			[
				"propert",
				"source\\kernel\\api\\property_list.h"
			],
			[
				"manager_proj",
				"source\\editor\\src\\manager_project.h"
			],
			[
				"glw_js",
				"source\\glw_json.h"
			],
			[
				"ngine_js",
				"source\\core\\src\\serialization\\engine_json.h"
			],
			[
				"manager_pro",
				"source\\editor\\src\\manager_project.cpp"
			],
			[
				"thread_pool",
				"source\\kernel\\api\\thread_pool.h"
			],
			[
				"thread_po",
				"source\\kernel\\src\\thread_pool.cpp"
			],
			[
				"thread_poo",
				"source\\kernel\\api\\thread_pool.h"
			],
			[
				"type_land",
				"source\\core\\api\\type_landscape.h"
			],
			[
				"type_en",
				"source\\core\\api\\type_entity.h"
			],
			[
				"type_p",
				"source\\physics_bullet\\api\\type_physics.h"
			],
			[
				"view_lig",
				"source\\render\\src\\view_entity\\light.h"
			],
			[
				"view.h",
				"source\\render\\src\\view.h"
			],
			[
				"view_land",
				"source\\render\\src\\view_entity\\landscape.h"
			],
			[
				"view_en",
				"source\\render\\src\\view_entity\\view_entity.h"
			],
			[
				"type_physi",
				"source\\physics_bullet\\api\\type_physics.h"
			],
			[
				"script",
				"source\\core\\src\\script\\script_lua.cpp"
			],
			[
				"manager_scene",
				"source\\core\\src\\manager\\manager_scene.h"
			],
			[
				"deferred",
				"source\\render\\src\\deferred_shader.h"
			],
			[
				"script_lua",
				"source\\core\\src\\script\\script_lua.cpp"
			],
			[
				"script_l",
				"thirdparty_cmake\\bullet_emscripten\\Extras\\glui\\glui_list.cpp"
			],
			[
				"world.",
				"source\\core\\src\\core\\world.h"
			],
			[
				"manager_s",
				"source\\core\\src\\manager\\manager_scene.h"
			],
			[
				"type_scene",
				"source\\core\\api\\type_scene.h"
			],
			[
				"type_base",
				"source\\kernel\\api\\type_base.h"
			],
			[
				"engine",
				"source\\core\\src\\serialization\\engine_json.h"
			],
			[
				"engn",
				"source\\core\\src\\serialization\\engine_json.h"
			],
			[
				"engine_js",
				"source\\core\\src\\serialization\\engine_json.h"
			],
			[
				"cmn",
				"source\\kernel\\api\\cmn_defs.h"
			],
			[
				"cmn_de",
				"source\\kernel\\api\\cmn_defs.h"
			],
			[
				"type_entity",
				"source\\core\\api\\type_entity.h"
			],
			[
				"scene.",
				"source\\core\\src\\manager\\manager_scene.cpp"
			],
			[
				"scene.cpp",
				"source\\editor\\src\\property_scene.cpp"
			],
			[
				"thread_p",
				"source\\kernel\\src\\thread_pool.cpp"
			],
			[
				"core_conte",
				"source\\core\\src\\core\\core_context.h"
			],
			[
				"bit_s",
				"source\\kernel\\api\\bit_stream.h"
			],
			[
				"clientmodu",
				"source\\network\\src\\client_module.cpp"
			],
			[
				"convex",
				"source\\kernel\\api\\convex_hull.h"
			],
			[
				"rendercore",
				"source\\render\\src\\render_core.cpp"
			],
			[
				"core.",
				"source\\render\\src\\core.h"
			],
			[
				"glw_json",
				"source\\core\\serialization\\glw_json.h"
			],
			[
				"serializ",
				"include\\kernel\\serialization.h"
			],
			[
				"core.cpp",
				"source\\core\\core\\core.cpp"
			],
			[
				"json",
				"source\\core\\serialization\\json.h"
			],
			[
				"type_ai",
				"include\\types\\type_ai.h"
			],
			[
				"params.h",
				"include\\kernel\\params.h"
			],
			[
				"params",
				"include\\kernel\\params.h"
			],
			[
				"type_a",
				"include\\types\\type_ai.h"
			],
			[
				"params.",
				"include\\kernel\\params.h"
			],
			[
				"cmakel",
				"build\\CMakeLists.txt"
			],
			[
				"json.cpp",
				"source\\core\\serialization\\json.cpp"
			],
			[
				"cscriptl",
				"source\\core\\script\\script_lua.cpp"
			],
			[
				"game_para",
				"projects\\voxel_game\\game_params.h"
			],
			[
				"param",
				"source\\kernel\\params.cpp"
			],
			[
				"game_param",
				"projects\\voxel_game\\game_params.h"
			],
			[
				"par",
				"include\\kernel\\params.h"
			],
			[
				"types.",
				"include\\kernel\\types.h"
			],
			[
				"type_ser",
				"source\\core\\type_serialization.h"
			],
			[
				"membu",
				"source\\kernel\\memory_buffer.h"
			],
			[
				"type_ini",
				"source\\core\\type_serialization.h"
			],
			[
				"type_seri",
				"source\\core\\type_serialization.h"
			],
			[
				"scene",
				"include\\types\\type_scene.h"
			],
			[
				"cmakelists",
				"projects\\voxel_game\\CMakeLists.txt"
			],
			[
				"quad_tr",
				"include\\kernel\\quad_tree.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"E:\\projects\\glow\\glow.sublime-project"
			]
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 469.0,
		"last_filter": "vec3",
		"selected_items":
		[
			[
				"vec3",
				"vec3"
			],
			[
				"json_load",
				"json_load_types"
			],
			[
				"json_save",
				"json_save_types"
			],
			[
				"json_",
				"json_load_types"
			],
			[
				"type_base",
				"type_base_t"
			],
			[
				"JSON",
				"JSON_SaveTypes"
			]
		],
		"width": 1224.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 236.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
